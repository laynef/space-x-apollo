type Weight {
    id: String
    name: String
    kg: Int
    lb: Int
}

type Height {
    meters: Int
    feet: Float
}

type Diameter {
    meters: Float
    feet: Int
}

type Mass {
    kg: Int
    lb: Int
}

type Measurements {
    kN: Int
    lbf: Int
}

type FirstStage {
    reusable: Boolean
    engines: Int
    fuel_amount_tons: Int
    burn_time_sec: Int
    thrust_sea_level: Measurements
    thrust_vacuum: Measurements
}

type Engine {
    number: Int
    type: String
    version: String
    layout: String
    engine_loss_max: Int
    propellant_1: String
    propellant_2: String
    thrust_sea_level: Measurements
    thrust_vacuum: Measurements
    thrust_to_weight: Float
}

type LandingLeg {
    number: Int
    material: String
}

type FootMeasurements {
    meters: Float
    feet: Float
}

type CompositeFairing {
    height: FootMeasurements
    diameter: FootMeasurements
}

type Payload {
    option_1: String
    option_2: String
    composite_fairing: CompositeFairing
}

type SecondStage {
    engines: Int
    fuel_amount_tons: Int
    burn_time_sec: Int
    thrust: Measurements
    payloads: Payload
}

type RocketType {
  id: Int
  active: Boolean
  stages: Int
  boosters: Int
  cost_per_launch: Int
  success_rate_pct: Int
  first_flight: String
  country: String
  company: String
  height: Height
  diameter: Diameter
  mass: Mass
  payload_weights: [Weight]
  first_stage: FirstStage
  second_stage: SecondStage
  engines: Engine
  landing_legs: LandingLeg
  wikipedia: String
  description: String
  rocket_id: String
  rocket_name: String
  rocket_type: String
}

type Query {
  rocket(rocketId: ID!): RocketType
  rockets: [RocketType]
}
